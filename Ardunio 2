#include <Keypad.h>
#include <Adafruit_LiquidCrystal.h>
#include <Servo.h>

#define codeLength 5
#define pir 10
#define flex A0
#define ldr A1
#define ldr2 A2
Servo myservo;
Adafruit_LiquidCrystal lcd_1(0);

char Code[codeLength];
char Passw[codeLength] = "1234";
byte keycount = 0;
unsigned long previousMillis = 0;
const long interval = 500;  // Send data every 1 second

const byte ROWS = 4;
const byte COLS = 4;
char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {9, 8, 7, 6};
byte colPins[COLS] = {5, 4, 3, 2};
Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);

void setup() {
  Serial.begin(9600);
  lcd_1.begin(16, 2);
  lcd_1.print("Enter Password");
  myservo.attach(11);
  pinMode(pir, INPUT);
}

void loop() {
  char customKey = customKeypad.getKey();
  if (customKey) {
    Code[keycount] = customKey;
    lcd_1.setCursor(keycount, 1);
    lcd_1.print(customKey);
    keycount++;

    if (keycount == codeLength - 1) {
      Code[keycount] = '\0';  // Null terminate the string
      if (strcmp(Code, Passw) == 0) {
        lcd_1.clear();
        lcd_1.print("Access Granted");
        myservo.write(90);
        delay(1000);
        myservo.write(0);
        sendData(1);  // Send data with password success flag
      } else {
        lcd_1.clear();
        lcd_1.print("Access Denied");
        delay(1000);
        sendData(0);  // Send data with password failure flag
      }

      keycount = 0;
      lcd_1.clear();
      lcd_1.print("Enter Password");
    }
  }

  // Real-time sensor data transmission every second
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    sendData(-1);  // -1 indicates no password input, just sensor data
  }
}

void sendData(int passwordCorrect) {
  int flexValue = analogRead(flex);
  int pirState = digitalRead(pir);
  int ldrValue = analogRead(ldr);
  int ldr1Value = analogRead(ldr2);

  Serial.print(passwordCorrect);  // -1 means sensor data, 1 = correct, 0 = incorrect
  Serial.print(",");
  Serial.print(flexValue);
  Serial.print(",");
  Serial.print(pirState);
  Serial.print(",");
  Serial.print(ldrValue);
  Serial.print(",");
  Serial.println(ldr1Value);
}
